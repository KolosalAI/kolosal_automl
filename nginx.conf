"""
Nginx configuration for kolosal AutoML with enhanced security

Features:
- HTTPS enforcement with HSTS
- Security headers
- Rate limiting
- DDoS protection
- Request size limits
- SSL/TLS best practices

Author: GitHub Copilot
Date: 2025-07-24
Version: 0.2.0
"""

# Main configuration
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Hide server version
    server_tokens off;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Basic optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;  # Match application limit
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=strict_limit:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    
    # SSL/TLS configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # HTTPS redirect server
    server {
        listen 80;
        server_name _;
        
        # Security headers for HTTP
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Redirect all HTTP to HTTPS
        return 301 https://$host$request_uri;
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name localhost;  # Change to your domain
        
        # SSL certificate configuration
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;
        ssl_trusted_certificate /etc/nginx/certs/ca.crt;
        
        # HSTS header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # CSP header
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'" always;
        
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn conn_limit 10;
        
        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Health check endpoint (no rate limiting)
        location /health {
            access_log off;
            proxy_pass http://kolosal-automl:8000;
        }
        
        # API endpoints with stricter rate limiting
        location /api/ {
            limit_req zone=strict_limit burst=5 nodelay;
            proxy_pass http://kolosal-automl:8000;
        }
        
        # File upload endpoints with size restrictions
        location /upload {
            client_max_body_size 10M;
            limit_req zone=strict_limit burst=2 nodelay;
            proxy_pass http://kolosal-automl:8000;
        }
        
        # Documentation and static files
        location /docs {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://kolosal-automl:8000;
        }
        
        location /static/ {
            expires 1d;
            add_header Cache-Control "public, immutable";
            proxy_pass http://kolosal-automl:8000;
        }
        
        # Default location
        location / {
            proxy_pass http://kolosal-automl:8000;
        }
        
        # Block common attack paths
        location ~ /(\.|_) {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(git|env|log|bak|swp|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block user agents
        if ($http_user_agent ~* (nikto|sqlmap|fimap|nessus|whatweb|Openvas)) {
            return 444;
        }
        
        # Block requests with suspicious patterns
        if ($request_uri ~* "(union|select|insert|delete|update|drop|create|alter|exec|script|javascript|vbscript)") {
            return 444;
        }
        
        # Custom error pages
        error_page 400 401 403 404 /40x.html;
        location = /40x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    
    # Upstream configuration for load balancing (if needed)
    upstream kolosal-automl {
        server kolosal-automl:8000;
        keepalive 32;
    }
}
