# kolosal AutoML Docker Environment Configuration
# Copy this file to .env and modify the values as needed

# =============================================================================
# BUILD CONFIGURATION
# =============================================================================
VERSION=0.2.0
BUILD_DATE=
VCS_REF=

# =============================================================================
# API CONFIGURATION
# =============================================================================
# Environment: development, testing, staging, production
API_ENV=production
API_DEBUG=false
API_WORKERS=4
API_PORT=8000
API_MEMORY_LIMIT=4G
API_CPU_LIMIT=2.0
API_MEMORY_RESERVATION=2G
API_CPU_RESERVATION=1.0

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
SECURITY_ENV=production
SECURITY_ENFORCE_HTTPS=false
SECURITY_REQUIRE_API_KEY=true
SECURITY_ENABLE_RATE_LIMITING=true
SECURITY_RATE_LIMIT_REQUESTS=100
SECURITY_RATE_LIMIT_WINDOW=60
SECURITY_ENABLE_JWT=true
SECURITY_JWT_EXPIRY_HOURS=24
SECURITY_ENABLE_AUDIT_LOGGING=true
SECURITY_ALLOWED_ORIGINS=
SECURITY_HSTS_MAX_AGE=31536000
MAX_REQUEST_SIZE=10485760

# API Keys (comma-separated for multiple keys)
# Generate strong API keys in production!
API_KEYS=your-secure-api-key-here

# JWT Secret (generate a strong secret for production!)
JWT_SECRET=your-jwt-secret-key-here

# =============================================================================
# BATCH PROCESSING CONFIGURATION
# =============================================================================
BATCH_INITIAL_SIZE=16
BATCH_MIN_SIZE=2
BATCH_MAX_SIZE=128
BATCH_TIMEOUT=0.02
BATCH_MAX_QUEUE_SIZE=10000
ENABLE_ADAPTIVE_BATCHING=true
ENABLE_MONITORING=true
BATCH_NUM_WORKERS=8
ENABLE_MEMORY_OPTIMIZATION=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_LEVEL=INFO
ENABLE_AUDIT_LOGGING=true

# =============================================================================
# NETWORKING CONFIGURATION
# =============================================================================
HTTP_PORT=80
HTTPS_PORT=443
API_DOMAIN=localhost

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_MAXMEMORY=256mb
REDIS_MEMORY_LIMIT=512M

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin123
LOKI_PORT=3100

# =============================================================================
# DATABASE CONFIGURATION (if using PostgreSQL)
# =============================================================================
# POSTGRES_HOST=postgres
# POSTGRES_PORT=5432
# POSTGRES_DB=kolosal
# POSTGRES_USER=kolosal
# POSTGRES_PASSWORD=your-db-password-here
# POSTGRES_MEMORY_LIMIT=1G

# =============================================================================
# DEVELOPMENT OVERRIDES
# =============================================================================
# Uncomment these for development mode
# API_ENV=development
# API_DEBUG=true
# SECURITY_ENV=development
# SECURITY_REQUIRE_API_KEY=false
# SECURITY_ENABLE_RATE_LIMITING=false
# LOG_LEVEL=DEBUG
# API_KEYS=dev_key,test_key

# =============================================================================
# EXTERNAL SERVICES (if applicable)
# =============================================================================
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_REGION=us-west-2
# S3_BUCKET=

# MLFLOW_TRACKING_URI=
# MLFLOW_S3_ENDPOINT_URL=

# =============================================================================
# SSL/TLS CERTIFICATES (for HTTPS)
# =============================================================================
# TLS_CERT_PATH=./certs/server.crt
# TLS_KEY_PATH=./certs/server.key
# TLS_CA_PATH=./certs/ca.crt
